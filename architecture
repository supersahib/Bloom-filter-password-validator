graph TB
    subgraph "Frontend"
        Browser[Browser]
        React[React App<br/>Port 3000]
    end

    subgraph "Backend - Single Docker Container"
        API[FastAPI<br/>Port 8000<br/>• /check endpoint<br/>• /stats endpoint<br/>• Background thread for updates]
        BF[Bloom Filter Module<br/>• 600M passwords<br/>• Sharded across 16 keys]
    end

    subgraph "Database"
        Redis[(Redis<br/>Port 6379<br/>• Stores bit arrays<br/>• ~1GB memory)]
    end

    subgraph "Data Sources"
        HIBP[HIBP Password Lists<br/>Download once, load on startup]
    end

    subgraph "Docker Compose"
        Compose[docker-compose.yml<br/>• 3 services: frontend, backend, redis<br/>• One network<br/>• One volume for Redis]
    end

    %% Connections
    Browser -->|HTTP| React
    React -->|API calls<br/>localhost:8000| API
    API --> BF
    BF -->|SETBIT/GETBIT| Redis
    API -->|Load on startup| HIBP
    
    Compose -.->|Manages| React
    Compose -.->|Manages| API
    Compose -.->|Manages| Redis

    %% Styling
    classDef frontendStyle fill:#e3f2fd,stroke:#1565c0,stroke-width:2px
    classDef backendStyle fill:#f3e5f5,stroke:#6a1b9a,stroke-width:2px
    classDef dataStyle fill:#e8f5e9,stroke:#2e7d32,stroke-width:2px
    
    class Browser,React frontendStyle
    class API,BF backendStyle
    class Redis,HIBP dataStyle